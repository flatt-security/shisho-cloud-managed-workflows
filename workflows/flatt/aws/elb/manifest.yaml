version: 0.1.0

id: "prebundle-aws-flatt-elb"
name: "Prebundle: Review AWS ELB posture (Flatt)"

triggers:
  schedule:
    - cron: "0 */1 * * *"

jobs:
  - id: backend-sg
    name: Review transport to the backend
    decide:
      rego: !include backend-sg/decide.rego
      with:
        resource_exceptions:
          type: resource_exception
          multiple: true
          description: A special list of resource exceptions
          values: []
        tag_exceptions:
          type: string
          multiple: true
          description: A list of AWS tags with which resources can have any settings automatically. For instance, if you include `Environment=production` for this value, all resources with `Environment=production` will be allowed automatically.
          values: []
      input:
        schema: !include backend-sg/decide.graphql
  - id: transport
    name: Review transport for ELB connections
    decide:
      rego: !include transport/decide.rego
      with:
        resource_exceptions:
          type: resource_exception
          multiple: true
          description: A special list of resource exceptions
          values: []
        tag_exceptions:
          type: string
          multiple: true
          description: A list of AWS tags with which resources can have any settings automatically. For instance, if you include `Environment=production` for this value, all resources with `Environment=production` will be allowed automatically.
          values: []
      input:
        schema: !include transport/decide.graphql
  - id: tls-version
    name: Review TLS version for ELB connections
    decide:
      rego: !include tls-version/decide.rego
      with:
        resource_exceptions:
          type: resource_exception
          multiple: true
          description: A special list of resource exceptions
          values: []
        tag_exceptions:
          type: string
          multiple: true
          description: A list of AWS tags with which resources can have any settings automatically. For instance, if you include `Environment=production` for this value, all resources with `Environment=production` will be allowed automatically.
          values: []
      input:
        schema: !include tls-version/decide.graphql
